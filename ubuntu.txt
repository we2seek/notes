##################################################
# Сжать папку и разбить архив через 7z
    7z a -tzip -v1m -mx9 result.zip source_folder/
    a      — add
    -tzip  — zip type
    -v1m   — split to parts of 1 mb
    -mx9   — compression level

# 7z compression offers greater compression, but 
# does not preserve file ownership, permissions, etc. 
##################################################
# Положить в архив с сохранением прав доступа к файлам
tar cpvf backup.tar folder

# Положить в архив с сохранением прав доступа к файлам И СЖАТЬ
tar cpvzf backup.tar.gz folder

# Сжать и разбить:
    tar cpvzf - ./backup | split -d -b 10m - backup.tar.gz.

# Склеить и распаковать:
    cat backup.tar* | tar xpzf -

##################################################
# Сжать каждую папку в отдельный архив
find . -type d -maxdepth 1 -mindepth 1 -exec tar cpvzf {}.tar.gz {} \;

##################################################
# Scan LAN
    nmap -sP 192.168.1.0/24

##################################################
# Еще один способ разбить файлы на архивы
# получаться файлы backup.zXX и backup.zip
    zip -s 2g -r -1 backup backup-all

# Склеить и разархивировать: (backup.zip последний файл в наборе)
    zip -F backup.zip --output big_archive.zip
    mkdir output_folder
    unzip -d output_folder big_archive.zip

# Так же можно добавить md5 к частям архива. 
# При возникновении проблем при разархивировании полезно проверить
# контрольную сумму частей архива, чтобы понимать в чем дело
    md5sum backup.* >> md5.txt    # Создаем файл с контрольными суммами
    md5sum --check md5.txt        # Проверка (может занять некоторое ощутимое время)


##################################################
    Encrypt files (archives)
##################################################
Encrypt:
    gpg -o fileToBeEncrypted.tar.gz.gpg --symmetric fileToBeEncrypted.tar.gz
This will prompt you for a passphrase

Decrypt:
    gpg fileToBeEncrypted.tar.gz.gpg 
This will prompt you for a passphrase again

##################################################
    uname — Информация о системе
    df (disk free) — информация о диске
    df -i — посмотреть инфо об inode
    du -h folder_name — размер папки folder_name
    free — показывает информацию об использовании памяти и swap
    w/who — инфо кто работает в системе и что делает
    which — поиск команды

        /dev/null — черная дыра
        /dev/zero — источник нулей
        /dev/random, /dev/urandom — источник случайных данных

    ^z — увести текущую программу в фон
    bg — продолжить её выполнение

    jobs — посмотреть список фоновых задач
    fg N — достать задачу номер N

    find — поиск файлов/каталогов
        -name — фильтр по имени
        -type — указать тип объекта: d — directory, f — file

    $ find . -name "*.gz" -exec echo "file {} found" \;



    cd - — вернуться в предыдущую директорию



##################################################
    Поиск текста в файле (grep)
##################################################

grep 'what_to_search' /path/where/to/search
grep -nr /path/where/to/search -e "what*search*expression"
grep -nr "what*search*expression" /path/where/to/search

-i  Отключение чувствительности к регистру
-r  Рекурсивный поиск по директориям
-w  Поиск только целых слов
-c  Вывод количества найденных элементов
-n  Вывод всей строки, содержащей запрос
-v  Вывод инвертированного совпадения



##################################################
    Pipeline stdout & stderr
##################################################
>  file redirects stdout to file
1> file redirects stdout to file
2> file redirects stderr to file
&> file redirects stdout and stderr to file



##################################################
    Top
##################################################
    M — Sort by MEMORY usage
    P — Sort by CPU usage
    N — Sort by PROCESS ID
    T — Sort by RUNNING TIME 
    
    R — Reverse the sorting order
    x — Highlight the sorted column with bold text
    b — Highlight sorted column background color
    d — Change the update delay
    
    l — hide the load average information.
    m — hide the memory information.
    t — hide the task and cpu information.
    
    n — Change the number of processes to display
    1 — Display all CPU cores

    f — Show/Hide columns 

    FILTER
    Press the 'o' or 'O' to activate filter prompt. Then enter a filter like this and hit Enter:
        COMMAND=apache
    Now top will show only those processes whose COMMAND field contains the value apache. Here is another filter example that shows processes consuming CPU actively:
        %CPU>0.0
    See active filters — Press Ctrl+o to see currently active filters
    Clear filter — Press '=' key to clear any active filters


##################################################
    Remove terminal border for multi-tab
##################################################
    
Edit /usr/share/themes/Ambiance/gtk-3.0/apps/gnome-terminal.css and add:

    TerminalWindow .notebook {
        padding: 0;
        border-width: 0;
    }


##################################################
    Skype: No group messages    
##################################################
всем у кого на линуксе скайп  не показывает сообщения в группах нужно:

1. в любом диалоге скайпа ввести команду    /msnp24

2. Вылогиниться из скайпа.
3. Завершить процесс скайпа
4. Загрузить скайп



##################################################
    less
##################################################

G            — Перемещает в конец файла
g            — Перемещает в начало файла
:50          — Перемещает на 50 строку файла
q            — Выход из less
/searchterm  — Поиск строки, совпадающей с ‘searchterm’, ниже текущей строки
/            — Перемещает на следующий подходящий результат поиска
?searchterm  — Поиск строки, совпадающей с ‘searchterm’, выше текущей строки
?            — Перемещает на следующий подходящий результат поиска
up           — Перемещает на одну строку выше
down         — Перемещает на одну строку ниже
pageup       — Перемещает на одну страницу выше
pagedown     — Перемещает на одну страницу ниже



##################################################
    head
##################################################

Read first 10 lines from given file



##################################################
    tail
##################################################

Read last 10 lines from given file




##################################################
    history
##################################################

history | grep g++

history 10
    512 ls -al

!512    — Run command #512 again

$(!!)   — Reuse (not recompile) the output of the last command


##################################################
    terminal
##################################################

CTRL-A — Перемещение курсора в начало строки
CTRL-E — Перемещение курсора в конец строки
CTRL-R — Поиск по истории
CTRL-W — Вырезать последнее слово
CTRL-U — Вырезать всё до курсора
CTRL-K — Вырезать всё после курсора
CTRL-Y — Вернуть последнюю вырезанную строку
CTRL-_ — Отмена
CTRL-L — Очистка экрана терминала


##################################################
    netstat
##################################################
https://putty.org.ru/articles/netstat-linux-examples.html

netstat -anp | grep 10.61.


##################################################
    openvpn
##################################################
(https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos)
    Notes on expired keys:
If the apt signing key expires, apt will complain when refreshing the package cache (e.g. apt-get update). To fix this:

1) remove the expired key from apt keychain:
    sudo apt-key del E158C569

2) Then add the new key using wget and apt-key:
    wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg | sudo apt-key add -

3) Then verify that the new key is in the keychain:
    sudo apt-key list



##################################################
    copy file contents from remote machine over ssh
##################################################
ssh -e none user@remote.ip "cat /path/to/file.xml" | xclip -selection clipboard



##################################################
    extract text between quotes 
##################################################
sed 's/.*"\(.*\)"[^"]*$/\1/'



##################################################
    multiline cat
##################################################
    1. Assign multi-line string to a shell variable
$ sql=$(cat <<EOF
SELECT foo, bar FROM db
WHERE foo='baz'
EOF
)

   The $sql variable now holds the new-line characters too. You can verify with echo -e "$sql"

    2. Pass multi-line string to a file in Bash

$ cat <<EOF > print.sh
#!/bin/bash
echo \$PWD
echo $PWD
EOF

The print.sh file now contains:

#!/bin/bash
echo $PWD
echo /home/user

    3. Pass multi-line string to a pipe in Bash

$ cat <<EOF | grep 'b' | tee b.txt
foo
bar
baz
EOF

The b.txt file contains bar and baz lines. The same output is printed to stdout.



##################################################
    extract a predetermined range of lines from a text file
##################################################
sed -n '16224,16482p;16483q' filename > newfile



##################################################
   Multiline editor in terminal
##################################################
https://stackoverflow.com/a/33059422

If you press C-x C-e command that will open your default editor which defined .bashrc, 
after that you can use all powerful features of your editor.
When you save and exit, the lines will wait your enter.

If you want to define your editor, just write for Ex. EDITOR=emacs -nw or EDITOR=vi inside of ~/.bashrc



##################################################
   Ubuntu workspaces
##################################################
https://help.ubuntu.com/stable/ubuntu-help/shell-workspaces-movewindow.html.en

Switch between workspaces
    Super + PgUp | Ctrl + Alt + Up      Move to upper workspace
    Super + PgDp | Ctrl + Alt + Down    Move to downer workspace

Move window to a different workspace
    Super + Shift + PgUp                Move the window to a workspace UP of the current
    Super + Shift + PgDp                Move the window to a workspace DOWN of the current



##################################################
   test access to DB from your machine
##################################################

   nc -zv ip port




##################################################
   date
##################################################

add N days to certain date

   date +%Y-%m-%d -d "2023-03-01 +5 days"


##################################################
   Scan used ports
##################################################

netstat -tulpn | grep LISTEN | awk '{print $4}' | awk -F: '{print $NF}' | sort -g | uniq



##################################################
   scp with RSA-key
##################################################

1. На локальній тачці тимчасово дозволяєш логін за паролем
sudo vim /etc/ssh/sshd_config

PasswordAuthentication yes

2. Рестарт sshd
sudo service sshd restart

3. На віддаленій тачці генеруєш собі новий ключик, обережно, щоб не перетерти людям дефолтний. 
ssh-keygen -b 4096 -t rsa

4. Далі потрібно цей ключик *.pub покласти на твою тачку
ssh-copy-id -p100500 -i /path/to/id_rsa.pub LDAP@YOUR_IP

5. Прикриваємо на локальній тачці логін по паролю + рестарт сервісу sshd як у п.2

sudo vim /etc/ssh/sshd_config

PasswordAuthentication no




##################################################
   Find non-ascii symbols
##################################################
   
   grep --color='auto' -P -n "[\x80-\xFF]" sample.txt
      or
   grep --color='auto' -P -n "[^\x00-\x7F]" sample.txt  (this worked for me on my Ubuntu)
      or
   grep --color='auto' -n "[^[:ascii:]]" sample.txt

Source: https://www.baeldung.com/linux/find-non-ascii-chars



##################################################
   find and remove directories
##################################################
find ../webapps/ -maxdepth 1 -mindepth 1 -type d -exec rm -rf '{}' \;   




##################################################
   mass mv
##################################################

https://stackoverflow.com/a/6840404
   for f in *.jpg; do mv "$f" "$(echo "$f" | sed s/IMG/VACATION/)"; done

or simplier
   for f in *.war; do mv "$f" "${f}_"; done



